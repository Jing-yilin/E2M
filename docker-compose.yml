networks:
    e2m-network:
        driver: bridge

services:
    e2m-db:
        container_name: e2m-db
        image: postgres:15-alpine
        restart: always
        environment:
            POSTGRES_USER: e2m
            POSTGRES_PASSWORD: password
            POSTGRES_DB: e2m_db
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - e2m-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U e2m -d e2m_db"]
            interval: 30s
            timeout: 10s
            retries: 5

    e2m-api:
        build: app/
        container_name: e2m-api
        ports:
            - "8765:8765"
        environment:
            # flask config
            FLASK_APP: app.py
            FLASK_ENV: production
            API_URL: http://127.0.0.1:8765
            WEB_URL: http://127.0.0.1:3000
            TZ: Asia/Shanghai
            # converter config
            DOC_CONVERTER: unstructured
            DOCX_CONVERTER: unstructured
            PDF_CONVERTER: unstructured
            # ENABLE_LLM: "True"
            # llm config
            OPENAI_API_KEY: ""
            OPENAI_API_BASE: ""
            # OPENAI_PROXY=""
            ANTHROPIC_API_KEY: ""
            BAICHUAN_API_KEY: ""
            MOONSHOT_API_KEY: ""
            ZHIPUAI_API_KEY: ""
            DASHSCOPE_API_KEY: ""
            OLLAMA_BASE: http://localhost:11434
            # db config
            USE_DB: "True"
            SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://e2m:password@e2m-db/e2m_db
            SQLALCHEMY_BINDS: '{"e2m_db": "postgresql+psycopg2://e2m:password@e2m-db/e2m_db"}'
        depends_on:
            - e2m-db
        networks:
            - e2m-network

    e2m-web:
        build: web/
        container_name: e2m-web
        ports:
            - "3000:3000"
        environment:
            API_URL: http://127.0.0.1:8765
            NEXT_FONT_OPTIMIZATION: 'false'
        networks:
            - e2m-network

volumes:
    postgres_data:
